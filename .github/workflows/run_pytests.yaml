name: opentile pytest

on: [push, pull_request]

jobs:
  cache_test_images:
    name: cache test images
    runs-on: ubuntu-latest
    steps:
      # see:
      #   - https://github.com/actions/checkout/issues/135
      #   - https://github.com/actions/runner/issues/1246
      - name: Prevent cache-miss on windows
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Load test images from cache
        id: cache-test-images
        uses: actions/cache@v2
        with:
          key: test-images-cache-${{ hashFiles('tests/download_test_images.py') }}
          path: OPENTILE_TESTDATA
      - name: Load test images
        if: steps.cache-test-images.outputs.cache-hit != 'true'
        env:
          OPENTILE_TESTDIR: OPENTILE_TESTDATA
        run: |
          python -m pip install -U pip
          python -m pip install requests
          python tests/download_test_images.py

  tests:
    needs: [ cache_test_images ]
    name: pytest ${{ matrix.os }}::py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 6
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]
        include:
          # we'll test the python support on ubuntu
          - os: ubuntu-latest
            python-version: "3.10"
          - os: ubuntu-latest
            python-version: 3.9
          - os: ubuntu-latest
            python-version: 3.7
    steps:
      # see:
      #   - https://github.com/actions/checkout/issues/135
      #   - https://github.com/actions/runner/issues/1246
      - name: Prevent cache-miss on windows
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # cross os caching support, see: https://github.com/actions/cache/issues/591
      - name: Use GNU tar instead BSD tar
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
      - name: Load test images from cache
        id: cache-test-images
        uses: actions/cache@v2
        with:
          key: test-images-cache-${{ hashFiles('tests/download_test_images.py') }}
          path: OPENTILE_TESTDATA
      - name: Check test images are loaded
        if: steps.cache-test-images.outputs.cache-hit != 'true'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('test images were not cached')

      - name: Set up libjpegturbo Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://sourceforge.net/projects/libjpeg-turbo/files/2.1.3/libjpeg-turbo-official_2.1.3_amd64.deb
          sudo dpkg -i libjpeg-turbo-official_2.1.3_amd64.deb
      - name: Set up libjpegturbo OSX
        if: matrix.os == 'macos-latest'
        run: brew install jpeg-turbo
      - name: Set up libjpegturbo Windows
        shell: pwsh
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri https://sourceforge.net/projects/libjpeg-turbo/files/2.1.2/libjpeg-turbo-2.1.2-vc64.exe/download -OutFile libjpeg-turbo-2.1.2-vc64.exe -UserAgent "NativeHost"
          7z e libjpeg-turbo-2.1.2-vc64.exe -oC:\Windows\System32 bin/turbojpeg.dll

      - name: Update pip and install pytest
        run: |
          python -m pip install -U pip
          python -m pip install pytest

      - name: Install opentile
        run: python -m pip install .

      - name: Run tests
        env:
          OPENTILE_TESTDIR: OPENTILE_TESTDATA
          TURBOJPEG: C:\Windows\System32
        run: pytest -v tests/
